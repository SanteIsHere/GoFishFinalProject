@startuml GoFishGame

' note top of Game
'     "Go Fish simulation for two players"
' end note

class Player {
    - cards: ArrayList<Card> // Re-sizable array of cards
    - books: int // No. of groups of four cards of the same rank
    - score: int // Player's score - determined by the no. of books they have
}

class GoFishGame {
    - {static} currentPlayer: Player // Select randomly
    - {static} player: Player
    - {static} cpu: Player
    - {static} cardPool: Pool
}

class Pool {
    - deck: Card[]
}

' note right of Pool
'     "Represents the deck of available cards"
' end note

abstract class Card {
    - {static} validSuits: String[] = {"Clubs", "Diamonds", 
    "Hearts", "Spades"}
    - {static} rankMap: Map<Integer, String> = {1 -> "A", 11 -> "J", 
    12 -> "Q", 13 -> "K"}
}

class GoFishCard {
    - rank: int
    - suit: String
}

class PoolExhaustedException {

}

interface Drawable {
    
}

Player --> Pool: uses
Pool o-up-> Card: part of
GoFishCard -up-|> Card: extends
GoFishGame *--> Pool: has a
Pool -up-> Drawable: implements
PoolExhaustedException -up-> RuntimeException: extends

@enduml